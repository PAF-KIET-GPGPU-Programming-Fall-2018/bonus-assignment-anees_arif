#include <stdio.h>
#include <opencv2/core/core.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <iostream>
#include <string>


using namespace cv;
using namespace std;




// Compute Integral Image
void integralImages( MyImage *src, MyIntImage *sum, MyIntImage *sqsum )
{
  int x, y, s, t;
  unsigned char it;
  
  int height = src->height;
  int width = src->width;
  
  unsigned char *data = src->data;
  int * sumData = sum->data;
  
  for( y = 0; y < height; y++)
    {
    s = 0;
    /* loop over the number of columns */
    for( x = 0; x < width; x ++)
	    {
	      it = data[y*width+x];
	      s += it; // Row wise sum

	      t = s;
	      if (y != 0)
	          {
	          t += sumData[(y-1)*width+x];  // Column wise sum
	          }
	  sumData[y*width+x]=t;
	  }
  }
}




int main( int argc, char** argv )
{
    string imageName("./DB/Pos/2002/07/19/big/img_18.jpg"); // by default
    if( argc > 1)
    {
        imageName = argv[1];
    }
    Mat image;
    image = imread(imageName.c_str(), IMREAD_COLOR); // Read the file
    if( image.empty() )                      // Check for invalid input
    {
        cout <<  "Could not open or find the image" << std::endl ;
        return -1;
    }
    namedWindow( "Display window", WINDOW_AUTOSIZE ); // Create a window for display.
    imshow( "Display window", image );                // Show our image inside it.
    waitKey(0); // Wait for a keystroke in the window
    return 0;
}



